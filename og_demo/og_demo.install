 <?php

  function og_demo_install() {

    // Force Entity Plus to create the appropriate metadata for the new fields.  
    entity_property_info_cache_clear();

    // Create three groups

    $groups = array(
      'Red' => array(
        'title' => st('Theme Developers'),
        'body' => st('<p>This group is for folks working on new themes for Backdrop CMS.</p>'),
      ),
      'Green' => array(
        'title' => st('Documentation'),
        'body' => st('<p>A place for folks to coordinate efforts at improving Backdrop CMS documentation.</p>'),
      ),
      'Blue' => array(
        'title' => st('Core Development'),
        'body' => st('<p>Join this group for the latest information about core development priorities.</p>'),
      ),
    );

    foreach ($groups as $group => $info) {
      $group = new Node(
        array(
          'title' => $info['title'],
          'body' => array(
            LANGUAGE_NONE => array(
              array(
                'value' => $info['body'],
                'format' => 'filtered_html',
              ),
            ),
          ),
          'uid' => 1,
          'status' => 1,
          'promote' => 0,
          'type' => 'group',
        )
      );
      $group->save();
    }
  
    $group_content = array(
      'One' => array(
        'title' => st('Refence Module in Core'),
        'body' => st('<p>Move the Entity Reference contrib module into core. It has been refactored to remove any external dependencies. Entity Reference is the most obvious candidate based on the following advantages: <ol><li>It has the highest install count.</li></li>It has the most flexible API and number of extending modules.</li><li>It is a proven solution and includes an upgrade path for D7 Entity Reference users.</li></p>'),
        'group' => st('Core Development'),
      ),
      'Two' => array(
        'title' => st('What is a theme?'),
        'body' => st('<p>A theme is a collection of files which define the presentation layer of a Backdrop site. The theme determines the appearance of a site. You can also create one or more "sub-themes" or variations on a theme. Only the .info file is required, but most themes and sub-themes will use other files as well.</p><p>On the surface, sub-themes behave just like any other theme. The only difference is that they inherit the resources from their parent themes. To create one, a "base theme" entry inside the .info file is needed. From there it will inherit the resources from its parent theme. There can be multiple levels of inheritance; i.e., a sub-theme can declare another sub-theme as its base. There are no hard set limits to this.</p>'),
        'group' => st('Theme Developers'),
      ),
      'Three' => array(
        'title' => st('Contribute to Documentation'),
        'body' => st('<p>You can help the Backdrop community by contributing to the documentation on this site. Documentation of code is created by the API module from docblock comments within the code, so changes to code documentation are made by submitting a pull request as you would make for any other code change.</p>'),
        'group' => st('Documentation'),
      ),
      'Four' => array(
        'title' => st('The Backdrop CMS User Guide'),
        'body' => st('<p>The User Guide is a detailed "How-To" for practically everything you need to know to create, customize, and manage a Backdrop website and is intended for people who may be new to content management systems in general and to the Backdrop CMS in particular.</p>'),
        'group' => st('Documentation'),
      ),
      'Five' => array(
        'title' => st('Core Developers'),
        'body' => st('<p>Core developers should fight the urge to refactor, because small changes in core may result in large changes for contrib. Each major change will be weighed carefully against the principles of the project to determine if the improvements it offers are worth the cost of that change. If a decision is not immediately clear, the issue should be escalated to the Project Management Committee.</p>'),
        'group' => st('Core Development'),
      ),
      'Six' => array(
        'title' => st('Layouts'),
        'body' => st('<p>The most important consideration when converting themes to Backdrop is the concept that your theme is no longer responsible for the layout of a site. This is because of the introduction of Layout module, Backdrop drag and drop page layout builder.</p><p>Layout module now provides ten responsive layout templates including a multi-region stacked layout similar to what was provided in the Bartik theme for Drupal 7.</p><p>In the Layouts interface, blocks are provided to place the site header, main navigation, search box, and so on. All these elements can be rearranged by dragging and dropping these blocks into the regions provided by the layout template.</p><p>Porting a theme mainly now consists of the application of the old themes style to the new theme. Once this is understood, the conversion itself should be reasonably straightforward.</p>'),
        'group' => st('Theme Developers'),
      ),
    );

    foreach ($group_content as $content => $info) {
      og_demo_get_title($info);

      $content = new Node(
        array(
          'title' => $info['title'],
          'body' => array(
            LANGUAGE_NONE => array(
              array(
                'value' => $info['body'],
                'format' => 'filtered_html',
              ),
            ),
          ),
          'og_group_ref' => array(
            LANGUAGE_NONE => array(
              array(
                'target_id' => $info['group_id'],
              ),
            ),
          ),
          'uid' => 1,
          'status' => 1,
          'promote' => 0,
          'type' => 'group_content',
        )
      );
      node_save($content); 
    }

    dpm('install complete');

    // Update the menu router information.
    menu_rebuild();

  }

  function og_demo_get_title(&$temp) {
    //  Gets a list of all groups that are nodes
    $mygroups = og_get_all_group('node');

    // Finds group that has the same title 
    foreach ($mygroups as $gid) {
      $group_title = node_load($gid)->title;

      if ($group_title == $temp['group']) {
        $temp['group_id'] = $gid;
      }
    }
    return $temp;
  }

